{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "68b62be3",
   "metadata": {
    "papermill": {
     "duration": 0.017232,
     "end_time": "2023-11-26T15:11:56.221711",
     "exception": false,
     "start_time": "2023-11-26T15:11:56.204479",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# American Sign Language Fingerspelling Recognition with TensorFlow\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "041f00fc",
   "metadata": {
    "papermill": {
     "duration": 0.016293,
     "end_time": "2023-11-26T15:11:56.255042",
     "exception": false,
     "start_time": "2023-11-26T15:11:56.238749",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The objective of this project is to develop a robust and accurate model for American Sign Language (ASL) fingerspelling recognition using a Transformer architecture implemented in TensorFlow. The goal is to create a system capable of predicting and translating ASL fingerspelling from a sequence of video frames into corresponding text phrases. By leveraging the power of Transformer models, the project aims to capture intricate temporal dependencies and spatial relationships within the video data, enabling the accurate representation and interpretation of ASL fingerspelling gestures. Ultimately, the model's success will be measured by its ability to provide reliable and contextually meaningful translations of ASL fingerspelling, thereby facilitating improved communication accessibility for individuals with hearing impairments.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0b031bb7",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2023-11-26T15:11:56.289304Z",
     "iopub.status.busy": "2023-11-26T15:11:56.288980Z",
     "iopub.status.idle": "2023-11-26T15:12:10.899925Z",
     "shell.execute_reply": "2023-11-26T15:12:10.898921Z"
    },
    "papermill": {
     "duration": 14.630747,
     "end_time": "2023-11-26T15:12:10.902252",
     "exception": false,
     "start_time": "2023-11-26T15:11:56.271505",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting mediapipe\r\n",
      "  Obtaining dependency information for mediapipe from https://files.pythonhosted.org/packages/61/12/4ca8df3b40a3dbba725f1fb793b15510a61b1277c29b81ac322de48d827d/mediapipe-0.10.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata\r\n",
      "  Downloading mediapipe-0.10.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (9.6 kB)\r\n",
      "Requirement already satisfied: absl-py in /opt/conda/lib/python3.10/site-packages (from mediapipe) (1.4.0)\r\n",
      "Requirement already satisfied: attrs>=19.1.0 in /opt/conda/lib/python3.10/site-packages (from mediapipe) (23.1.0)\r\n",
      "Requirement already satisfied: flatbuffers>=2.0 in /opt/conda/lib/python3.10/site-packages (from mediapipe) (23.5.26)\r\n",
      "Requirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from mediapipe) (3.7.3)\r\n",
      "Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from mediapipe) (1.24.3)\r\n",
      "Requirement already satisfied: opencv-contrib-python in /opt/conda/lib/python3.10/site-packages (from mediapipe) (4.8.1.78)\r\n",
      "Requirement already satisfied: protobuf<4,>=3.11 in /opt/conda/lib/python3.10/site-packages (from mediapipe) (3.20.3)\r\n",
      "Collecting sounddevice>=0.4.4 (from mediapipe)\r\n",
      "  Downloading sounddevice-0.4.6-py3-none-any.whl (31 kB)\r\n",
      "Requirement already satisfied: CFFI>=1.0 in /opt/conda/lib/python3.10/site-packages (from sounddevice>=0.4.4->mediapipe) (1.15.1)\r\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (1.1.0)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (0.11.0)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (4.42.1)\r\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (1.4.4)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (21.3)\r\n",
      "Requirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (10.1.0)\r\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (3.0.9)\r\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib->mediapipe) (2.8.2)\r\n",
      "Requirement already satisfied: pycparser in /opt/conda/lib/python3.10/site-packages (from CFFI>=1.0->sounddevice>=0.4.4->mediapipe) (2.21)\r\n",
      "Requirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib->mediapipe) (1.16.0)\r\n",
      "Downloading mediapipe-0.10.8-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.5 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.5/34.5 MB\u001b[0m \u001b[31m41.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: sounddevice, mediapipe\r\n",
      "Successfully installed mediapipe-0.10.8 sounddevice-0.4.6\r\n"
     ]
    }
   ],
   "source": [
    "!pip install mediapipe"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "737019ac",
   "metadata": {
    "papermill": {
     "duration": 0.024355,
     "end_time": "2023-11-26T15:12:10.945590",
     "exception": false,
     "start_time": "2023-11-26T15:12:10.921235",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The MediaPipe Gesture Recognizer task lets us recognize hand gestures in real time, and provides the recognized hand gesture results along with the landmarks of the detected hands. We can use this task to recognize specific hand gestures from a user, and invoke application features that correspond to those gestures."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b263948",
   "metadata": {
    "papermill": {
     "duration": 0.022815,
     "end_time": "2023-11-26T15:12:10.994141",
     "exception": false,
     "start_time": "2023-11-26T15:12:10.971326",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Import the libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "10761d7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:11.033262Z",
     "iopub.status.busy": "2023-11-26T15:12:11.032398Z",
     "iopub.status.idle": "2023-11-26T15:12:24.671178Z",
     "shell.execute_reply": "2023-11-26T15:12:24.670383Z"
    },
    "papermill": {
     "duration": 13.661189,
     "end_time": "2023-11-26T15:12:24.673569",
     "exception": false,
     "start_time": "2023-11-26T15:12:11.012380",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.24.3\n",
      "  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import shutil\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import pyarrow.parquet as pq\n",
    "import tensorflow as tf\n",
    "import json\n",
    "import mediapipe\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import random\n",
    "\n",
    "from skimage.transform import resize\n",
    "from mediapipe.framework.formats import landmark_pb2\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras import layers\n",
    "from tqdm.notebook import tqdm\n",
    "from matplotlib import animation, rc"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20828007",
   "metadata": {
    "papermill": {
     "duration": 0.018072,
     "end_time": "2023-11-26T15:12:24.710776",
     "exception": false,
     "start_time": "2023-11-26T15:12:24.692704",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Load the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4663925f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:24.749655Z",
     "iopub.status.busy": "2023-11-26T15:12:24.749003Z",
     "iopub.status.idle": "2023-11-26T15:12:24.902189Z",
     "shell.execute_reply": "2023-11-26T15:12:24.901161Z"
    },
    "papermill": {
     "duration": 0.175001,
     "end_time": "2023-11-26T15:12:24.904373",
     "exception": false,
     "start_time": "2023-11-26T15:12:24.729372",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                              path  file_id  sequence_id  participant_id  \\\n",
      "0  train_landmarks/5414471.parquet  5414471   1816796431             217   \n",
      "1  train_landmarks/5414471.parquet  5414471   1816825349             107   \n",
      "2  train_landmarks/5414471.parquet  5414471   1816909464               1   \n",
      "\n",
      "                phrase  \n",
      "0         3 creekhouse  \n",
      "1      scales/kuhaylah  \n",
      "2  1383 william lanier  \n",
      "\n",
      "Size of the dataset  (67208, 5)\n"
     ]
    }
   ],
   "source": [
    "df = pd.read_csv('/kaggle/input/asl-fingerspelling/train.csv')\n",
    "print(df.head(3))\n",
    "print(\"\\nSize of the dataset  {}\".format(df.shape))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "391bd2e4",
   "metadata": {
    "papermill": {
     "duration": 0.018144,
     "end_time": "2023-11-26T15:12:24.941110",
     "exception": false,
     "start_time": "2023-11-26T15:12:24.922966",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This dataset consists of 67,208 entries, where each entry corresponds to a specific instance of ASL fingerspelling. The dataset includes information such as file path, file ID, sequence ID, participant ID, and the associated text phrase."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41a76517",
   "metadata": {
    "papermill": {
     "duration": 0.017843,
     "end_time": "2023-11-26T15:12:24.977160",
     "exception": false,
     "start_time": "2023-11-26T15:12:24.959317",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Exploration of the DataSet"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "276ea813",
   "metadata": {
    "papermill": {
     "duration": 0.061716,
     "end_time": "2023-11-26T15:12:25.058171",
     "exception": false,
     "start_time": "2023-11-26T15:12:24.996455",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This Data set is consists of a .csv file name train.csv and different point (face, right hand , left hand) of a video for a particlular phrase is in train_landmarkes.parquet file "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd4e10d3",
   "metadata": {
    "papermill": {
     "duration": 0.018759,
     "end_time": "2023-11-26T15:12:25.095442",
     "exception": false,
     "start_time": "2023-11-26T15:12:25.076683",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The following diagram shows an example of how files are connected."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41b338cc",
   "metadata": {
    "papermill": {
     "duration": 0.019778,
     "end_time": "2023-11-26T15:12:25.134561",
     "exception": false,
     "start_time": "2023-11-26T15:12:25.114783",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**image12**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dc23690d",
   "metadata": {
    "papermill": {
     "duration": 0.018615,
     "end_time": "2023-11-26T15:12:25.173026",
     "exception": false,
     "start_time": "2023-11-26T15:12:25.154411",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "As an example lets explore one of the phrase of our data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ceeef74c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:25.211075Z",
     "iopub.status.busy": "2023-11-26T15:12:25.210726Z",
     "iopub.status.idle": "2023-11-26T15:12:25.223972Z",
     "shell.execute_reply": "2023-11-26T15:12:25.223098Z"
    },
    "papermill": {
     "duration": 0.034906,
     "end_time": "2023-11-26T15:12:25.226186",
     "exception": false,
     "start_time": "2023-11-26T15:12:25.191280",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sequence_id: 1816909464, file_id: 5414471, phrase: 1383 william lanier\n"
     ]
    }
   ],
   "source": [
    "sequence_id, file_id, phrase = df.iloc[2][['sequence_id', 'file_id', 'phrase']]\n",
    "print(f\"sequence_id: {sequence_id}, file_id: {file_id}, phrase: {phrase}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "853ec74d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:25.264329Z",
     "iopub.status.busy": "2023-11-26T15:12:25.264020Z",
     "iopub.status.idle": "2023-11-26T15:12:28.676423Z",
     "shell.execute_reply": "2023-11-26T15:12:28.675366Z"
    },
    "papermill": {
     "duration": 3.434242,
     "end_time": "2023-11-26T15:12:28.679006",
     "exception": false,
     "start_time": "2023-11-26T15:12:25.244764",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape of the sequence dataset for file_id 5414471 and sequence_id 1816909464 is (236, 1630)\n",
      "First few rows of the dataset:\n",
      "             frame  x_face_0  x_face_1  x_face_2  x_face_3  x_face_4  \\\n",
      "sequence_id                                                            \n",
      "1816909464       0  0.633601  0.618904  0.623231  0.606461  0.618572   \n",
      "1816909464       1  0.635823  0.636086  0.636008  0.621483  0.636530   \n",
      "\n",
      "             x_face_5  x_face_6  x_face_7  x_face_8  ...  z_right_hand_11  \\\n",
      "sequence_id                                          ...                    \n",
      "1816909464   0.620224  0.626085  0.514628  0.628102  ...        -0.111414   \n",
      "1816909464   0.637268  0.639157  0.515761  0.639826  ...        -0.122258   \n",
      "\n",
      "             z_right_hand_12  z_right_hand_13  z_right_hand_14  \\\n",
      "sequence_id                                                      \n",
      "1816909464         -0.104189        -0.045380        -0.121249   \n",
      "1816909464         -0.109364        -0.056801        -0.140697   \n",
      "\n",
      "             z_right_hand_15  z_right_hand_16  z_right_hand_17  \\\n",
      "sequence_id                                                      \n",
      "1816909464         -0.109559        -0.081881        -0.061576   \n",
      "1816909464         -0.121780        -0.086510        -0.075543   \n",
      "\n",
      "             z_right_hand_18  z_right_hand_19  z_right_hand_20  \n",
      "sequence_id                                                     \n",
      "1816909464         -0.120730        -0.112934        -0.093270  \n",
      "1816909464         -0.137953        -0.123546        -0.098119  \n",
      "\n",
      "[2 rows x 1630 columns]\n"
     ]
    }
   ],
   "source": [
    "# File path to the Parquet file\n",
    "file_path = f\"/kaggle/input/asl-fingerspelling/train_landmarks/{str(file_id)}.parquet\"\n",
    "\n",
    "# Read the Parquet file and filter based on file_id and sequence_id\n",
    "sample_sequence_df = pq.read_table(file_path, filters=[('sequence_id', '=', sequence_id)]).to_pandas()\n",
    "\n",
    "# Display the shape of the sequence dataset\n",
    "print(\"Shape of the sequence dataset for file_id {} and sequence_id {} is {}\".format(file_id, sequence_id, sample_sequence_df.shape))\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "print(\"First few rows of the dataset:\")\n",
    "print(sample_sequence_df.head(2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2512afc3",
   "metadata": {
    "papermill": {
     "duration": 0.019957,
     "end_time": "2023-11-26T15:12:28.720305",
     "exception": false,
     "start_time": "2023-11-26T15:12:28.700348",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We have picked the file_id 5414471 and the corresponding paraquet file which contains the phase ' 1383 william lanier'. As we can see there are 1630 rows which contains the data from different parts of the body i.e is face,left-hand,right-hand,both the legs etc. The values ranges from zero to one in the paraquet file. \n",
    "If we look deeper into one single hand, a total of 21(0-20) sequence points can be found. Image is attatched below for the reference."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3516f23",
   "metadata": {
    "papermill": {
     "duration": 0.019841,
     "end_time": "2023-11-26T15:12:28.760428",
     "exception": false,
     "start_time": "2023-11-26T15:12:28.740587",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "![Source:Mediapipe](https://developers.google.com/static/mediapipe/images/solutions/hand-landmarks.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb12bc4f",
   "metadata": {
    "papermill": {
     "duration": 0.024317,
     "end_time": "2023-11-26T15:12:28.804908",
     "exception": false,
     "start_time": "2023-11-26T15:12:28.780591",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "![](https://developers.google.com/static/mediapipe/images/solutions/pose_landmarks_index.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "aa61b113",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:28.846873Z",
     "iopub.status.busy": "2023-11-26T15:12:28.846164Z",
     "iopub.status.idle": "2023-11-26T15:12:29.358538Z",
     "shell.execute_reply": "2023-11-26T15:12:29.357664Z"
    },
    "papermill": {
     "duration": 0.536902,
     "end_time": "2023-11-26T15:12:29.361591",
     "exception": false,
     "start_time": "2023-11-26T15:12:28.824689",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "\n",
    "# Assuming sample_sequence_df is a DataFrame with columns 'x_right_hand_1', 'y_right_hand_1', 'z_right_hand_1', ...\n",
    "\n",
    "# Get the hand landmarks for the right hand\n",
    "x_hand = sample_sequence_df.filter(regex=\"x_right_hand.*\").values\n",
    "y_hand = sample_sequence_df.filter(regex=\"y_right_hand.*\").values\n",
    "z_hand = sample_sequence_df.filter(regex=\"z_right_hand.*\").values\n",
    "\n",
    "# Create a 3D plot\n",
    "fig = plt.figure(figsize=(8, 8))\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "\n",
    "# Plot the hand landmarks\n",
    "ax.scatter(x_hand, y_hand, z_hand, label='Right Hand Landmarks', marker='o', s=50)\n",
    "\n",
    "# Set axis labels\n",
    "ax.set_xlabel('X-axis')\n",
    "ax.set_ylabel('Y-axis')\n",
    "ax.set_zlabel('Z-axis')\n",
    "\n",
    "# Add legend\n",
    "ax.legend()\n",
    "\n",
    "# Show the 3D plot\n",
    "plt.title('3D Plot of Right Hand Landmarks Over Time')\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "bfab91e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:29.411642Z",
     "iopub.status.busy": "2023-11-26T15:12:29.410715Z",
     "iopub.status.idle": "2023-11-26T15:12:29.656321Z",
     "shell.execute_reply": "2023-11-26T15:12:29.655425Z"
    },
    "papermill": {
     "duration": 0.275555,
     "end_time": "2023-11-26T15:12:29.658453",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.382898",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAxgAAAMsCAYAAADXlgTfAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/OQEPoAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAQxUlEQVR4nO3XwQkAIBDAMHX/nc8lCoIkE/TbPTOzAAAAAud1AAAA8A+DAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQMRgAAEDGYAAAABmDAQAAZAwGAACQufqTClQw9Y3mAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Creating and animated image of right hand for phrase: 1383 william lanier\n",
    "import matplotlib.pyplot as plt\n",
    "from mpl_toolkits.mplot3d import Axes3D\n",
    "from matplotlib.animation import FuncAnimation\n",
    "import mediapipe as mp\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "fig = plt.figure(figsize=(10, 10))\n",
    "ax = fig.add_subplot(111, projection='3d')\n",
    "\n",
    "# Function to initialize the 3D plot for animation\n",
    "def init():\n",
    "    ax.scatter([], [], [], label='Right Hand Landmarks', marker='o', s=50)\n",
    "    ax.set_xlabel('X-axis')\n",
    "    ax.set_ylabel('Y-axis')\n",
    "    ax.set_zlabel('Z-axis')\n",
    "    ax.legend()\n",
    "    return ax,\n",
    "\n",
    "# Function to update the 3D plot for each frame in animation\n",
    "def update(frame):\n",
    "    ax.cla()  # Clear the previous frame\n",
    "    ax.scatter(x_hand[:frame], y_hand[:frame], z_hand[:frame], label='Right Hand Landmarks', marker='o', s=50)\n",
    "    ax.set_xlabel('X-axis')\n",
    "    ax.set_ylabel('Y-axis')\n",
    "    ax.set_zlabel('Z-axis')\n",
    "    ax.legend()\n",
    "    return ax,\n",
    "\n",
    "# Create the animation\n",
    "animation = FuncAnimation(fig, update, frames=len(x_hand), init_func=init, blit=True)\n",
    "\n",
    "# Show the 3D animation\n",
    "plt.title('3D Animation of Right Hand Landmarks')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "782ea6f3",
   "metadata": {
    "papermill": {
     "duration": 0.020737,
     "end_time": "2023-11-26T15:12:29.700693",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.679956",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Preprocess the data\n",
    "Ok before preprossing the data let me clerify that our motive is to extract landmarkes data and treat it as an vector input to the transformer model thatswhy our preprocessing of the data will be accordingly. some steps are listed below  \n",
    "1. Extract Relevant Features:\n",
    "              Collect hand landmarks and pose coordinates for hands from each frame. \n",
    "2. Rearrange Data:\n",
    "             Organize the data so that each Parquet file includes both landmark data and its corresponding phrase.\n",
    "3. TFRecord Format:\n",
    "             Convert the data to TFRecord format for efficient storage and retrieval.\n",
    "4. Normalization/Scaling:\n",
    "             Normalize or scale hand landmark coordinates to ensure consistent feature scales.\n",
    "5. Handling Missing Data:\n",
    "             Address missing values by filling them with zeros, means, or using advanced imputation.\n",
    "6. Sequence Padding:\n",
    "             If needed, pad sequences to a fixed length for consistent input dimensions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92313b2e",
   "metadata": {
    "papermill": {
     "duration": 0.020642,
     "end_time": "2023-11-26T15:12:29.742823",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.722181",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**imageacdhba**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e1944c3",
   "metadata": {
    "papermill": {
     "duration": 0.020569,
     "end_time": "2023-11-26T15:12:29.784053",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.763484",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "ASL fingerspelling focus on tha hand movement and hand pose we going to take all the righthand and lefthand points. And for the hand pose we are taking  13, 15, 17, 19, 21 14, 16, 18, 20, 22 this poins "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b23070fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:29.827180Z",
     "iopub.status.busy": "2023-11-26T15:12:29.826584Z",
     "iopub.status.idle": "2023-11-26T15:12:29.831112Z",
     "shell.execute_reply": "2023-11-26T15:12:29.830360Z"
    },
    "papermill": {
     "duration": 0.028299,
     "end_time": "2023-11-26T15:12:29.833131",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.804832",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Pose coordinates for hand movement.\n",
    "LPOSE = [13, 15, 17, 19, 21]\n",
    "RPOSE = [14, 16, 18, 20, 22]\n",
    "POSE = LPOSE + RPOSE"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1abedcc2",
   "metadata": {
    "papermill": {
     "duration": 0.020507,
     "end_time": "2023-11-26T15:12:29.874477",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.853970",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Create x,y,z label names from coordinates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "cdfc354d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:29.917151Z",
     "iopub.status.busy": "2023-11-26T15:12:29.916875Z",
     "iopub.status.idle": "2023-11-26T15:12:29.922721Z",
     "shell.execute_reply": "2023-11-26T15:12:29.921875Z"
    },
    "papermill": {
     "duration": 0.029506,
     "end_time": "2023-11-26T15:12:29.924669",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.895163",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = [f'x_right_hand_{i}' for i in range(21)] + [f'x_left_hand_{i}' for i in range(21)] + [f'x_pose_{i}' for i in POSE]\n",
    "Y = [f'y_right_hand_{i}' for i in range(21)] + [f'y_left_hand_{i}' for i in range(21)] + [f'y_pose_{i}' for i in POSE]\n",
    "Z = [f'z_right_hand_{i}' for i in range(21)] + [f'z_left_hand_{i}' for i in range(21)] + [f'z_pose_{i}' for i in POSE]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5c6f226",
   "metadata": {
    "papermill": {
     "duration": 0.020532,
     "end_time": "2023-11-26T15:12:29.966242",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.945710",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Create feature columns from the extracted coordinates."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2da12f86",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:30.009948Z",
     "iopub.status.busy": "2023-11-26T15:12:30.009683Z",
     "iopub.status.idle": "2023-11-26T15:12:30.015412Z",
     "shell.execute_reply": "2023-11-26T15:12:30.014561Z"
    },
    "papermill": {
     "duration": 0.030289,
     "end_time": "2023-11-26T15:12:30.017229",
     "exception": false,
     "start_time": "2023-11-26T15:12:29.986940",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "156"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "FEATURE_COLUMNS = X + Y + Z\n",
    "len(FEATURE_COLUMNS)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b043ecd",
   "metadata": {
    "papermill": {
     "duration": 0.020769,
     "end_time": "2023-11-26T15:12:30.058858",
     "exception": false,
     "start_time": "2023-11-26T15:12:30.038089",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In FEATURE_COLUMNS there is 156 columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf21b8a9",
   "metadata": {
    "papermill": {
     "duration": 0.020652,
     "end_time": "2023-11-26T15:12:30.100311",
     "exception": false,
     "start_time": "2023-11-26T15:12:30.079659",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "\n",
    "Store ids of each coordinate labels to lists"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e1dc983d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:30.143519Z",
     "iopub.status.busy": "2023-11-26T15:12:30.143048Z",
     "iopub.status.idle": "2023-11-26T15:12:30.149861Z",
     "shell.execute_reply": "2023-11-26T15:12:30.149052Z"
    },
    "papermill": {
     "duration": 0.03035,
     "end_time": "2023-11-26T15:12:30.151692",
     "exception": false,
     "start_time": "2023-11-26T15:12:30.121342",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if \"x_\" in col]\n",
    "Y_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if \"y_\" in col]\n",
    "Z_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if \"z_\" in col]\n",
    "\n",
    "RHAND_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if \"right\" in col]\n",
    "LHAND_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if  \"left\" in col]\n",
    "RPOSE_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if  \"pose\" in col and int(col[-2:]) in RPOSE]\n",
    "LPOSE_IDX = [i for i, col in enumerate(FEATURE_COLUMNS)  if  \"pose\" in col and int(col[-2:]) in LPOSE]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b621a8a",
   "metadata": {
    "papermill": {
     "duration": 0.021987,
     "end_time": "2023-11-26T15:12:30.194814",
     "exception": false,
     "start_time": "2023-11-26T15:12:30.172827",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# write the dataset as TFRecords\n",
    "We have created a new column named FEATURE_COLUMNS from the existing paraquet files structure. We have handpicked the data for pose,left-hand,right-hand to be included in this new feature_column. The size of this new column is 156 which is spread across to capture the details i.e left/right-hand and pose.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0fed8382",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:12:30.238642Z",
     "iopub.status.busy": "2023-11-26T15:12:30.238311Z",
     "iopub.status.idle": "2023-11-26T15:22:03.282518Z",
     "shell.execute_reply": "2023-11-26T15:22:03.281469Z"
    },
    "papermill": {
     "duration": 573.069456,
     "end_time": "2023-11-26T15:22:03.285596",
     "exception": false,
     "start_time": "2023-11-26T15:12:30.216140",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0ffb9e671c8c476390778887b19334df",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/68 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Set length of frames to 128\n",
    "FRAME_LEN = 200\n",
    "\n",
    "# Create directory to store the new data\n",
    "if not os.path.isdir(\"preprocessed\"):\n",
    "    os.mkdir(\"preprocessed\")\n",
    "else:\n",
    "    shutil.rmtree(\"preprocessed\")\n",
    "    os.mkdir(\"preprocessed\")\n",
    "\n",
    "# Loop through each file_id\n",
    "for file_id in tqdm(df.file_id.unique()):\n",
    "    # Parquet file name\n",
    "    pq_file = f\"/kaggle/input/asl-fingerspelling/train_landmarks/{file_id}.parquet\"\n",
    "    # Filter train.csv and fetch entries only for the relevant file_id\n",
    "    file_df = df.loc[df[\"file_id\"] == file_id]\n",
    "    # Fetch the parquet file\n",
    "    parquet_df = pq.read_table(f\"/kaggle/input/asl-fingerspelling/train_landmarks/{str(file_id)}.parquet\",\n",
    "                              columns=['sequence_id'] + FEATURE_COLUMNS).to_pandas()\n",
    "    # File name for the updated data\n",
    "    tf_file = f\"preprocessed/{file_id}.tfrecord\"\n",
    "    parquet_numpy = parquet_df.to_numpy()\n",
    "    # Initialize the pointer to write the output of \n",
    "    # each `for loop` below as a sequence into the file.\n",
    "    with tf.io.TFRecordWriter(tf_file) as file_writer:\n",
    "        # Loop through each sequence in file.\n",
    "        for seq_id, phrase in zip(file_df.sequence_id, file_df.phrase):\n",
    "            # Fetch sequence data\n",
    "            frames = parquet_numpy[parquet_df.index == seq_id]\n",
    "            \n",
    "            # Calculate the number of NaN values in each hand landmark\n",
    "            r_nonan = np.sum(np.sum(np.isnan(frames[:, RHAND_IDX]), axis = 1) == 0)\n",
    "            l_nonan = np.sum(np.sum(np.isnan(frames[:, LHAND_IDX]), axis = 1) == 0)\n",
    "            no_nan = max(r_nonan, l_nonan)\n",
    "            \n",
    "            if 2*len(phrase)<no_nan:\n",
    "                features = {FEATURE_COLUMNS[i]: tf.train.Feature(\n",
    "                    float_list=tf.train.FloatList(value=frames[:, i])) for i in range(len(FEATURE_COLUMNS))}\n",
    "                features[\"phrase\"] = tf.train.Feature(bytes_list=tf.train.BytesList(value=[bytes(phrase, 'utf-8')]))\n",
    "                record_bytes = tf.train.Example(features=tf.train.Features(feature=features)).SerializeToString()\n",
    "                file_writer.write(record_bytes)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3718c887",
   "metadata": {
    "papermill": {
     "duration": 0.021033,
     "end_time": "2023-11-26T15:22:03.332332",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.311299",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Get the saved TFRecord files into a list\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "859e4bb8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:03.377494Z",
     "iopub.status.busy": "2023-11-26T15:22:03.376317Z",
     "iopub.status.idle": "2023-11-26T15:22:03.439544Z",
     "shell.execute_reply": "2023-11-26T15:22:03.438188Z"
    },
    "papermill": {
     "duration": 0.088642,
     "end_time": "2023-11-26T15:22:03.442040",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.353398",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "List of 68 TFRecord files.\n"
     ]
    }
   ],
   "source": [
    "tf_records = df.file_id.map(lambda x: f'/kaggle/working/preprocessed/{x}.tfrecord').unique()\n",
    "print(f\"List of {len(tf_records)} TFRecord files.\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60662a81",
   "metadata": {
    "papermill": {
     "duration": 0.021386,
     "end_time": "2023-11-26T15:22:03.490029",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.468643",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Load character_to_prediction json file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "972c8e70",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:03.534870Z",
     "iopub.status.busy": "2023-11-26T15:22:03.534043Z",
     "iopub.status.idle": "2023-11-26T15:22:03.545533Z",
     "shell.execute_reply": "2023-11-26T15:22:03.544672Z"
    },
    "papermill": {
     "duration": 0.036323,
     "end_time": "2023-11-26T15:22:03.547581",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.511258",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "with open (\"/kaggle/input/asl-fingerspelling/character_to_prediction_index.json\", \"r\") as f:\n",
    "    char_to_num = json.load(f)\n",
    "\n",
    "# Add pad_token, start pointer and end pointer to the dict\n",
    "pad_token = 'P'\n",
    "start_token = '<'\n",
    "end_token = '>'\n",
    "pad_token_idx = 59\n",
    "start_token_idx = 60\n",
    "end_token_idx = 61\n",
    "\n",
    "char_to_num[pad_token] = pad_token_idx\n",
    "char_to_num[start_token] = start_token_idx\n",
    "char_to_num[end_token] = end_token_idx\n",
    "num_to_char = {j:i for i,j in char_to_num.items()}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61fb41f2",
   "metadata": {
    "papermill": {
     "duration": 0.020928,
     "end_time": "2023-11-26T15:22:03.590210",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.569282",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Resizing and Padding:-\n",
    " The hand landmark preprocessing function ensures uniformity in length by resizing to a fixed size and pads with zeros if needed. It identifies the dominant hand based on fewer NaN values, signifying its presence in the frame. The chosen hand's coordinates are normalized by subtracting the mean and dividing by the standard deviation. Handling NaN values involves replacing them with zeros. The final tensor, a combination of hand and pose information, is reshaped for ASL fingerspelling recognition. This process enhances data consistency and prepares it for effective use in deep learning models."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b9ece8d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:03.669292Z",
     "iopub.status.busy": "2023-11-26T15:22:03.668749Z",
     "iopub.status.idle": "2023-11-26T15:22:03.695567Z",
     "shell.execute_reply": "2023-11-26T15:22:03.694817Z"
    },
    "papermill": {
     "duration": 0.076829,
     "end_time": "2023-11-26T15:22:03.697737",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.620908",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Reference: https://www.kaggle.com/code/irohith/aslfr-transformer/notebook\n",
    "\n",
    "# Function to resize and add padding.\n",
    "def resize_pad(x):\n",
    "    if tf.shape(x)[0] < FRAME_LEN:\n",
    "        x = tf.pad(x, ([[0, FRAME_LEN-tf.shape(x)[0]], [0, 0], [0, 0]]))\n",
    "    else:\n",
    "        x = tf.image.resize(x, (FRAME_LEN, tf.shape(x)[1]))\n",
    "    return x\n",
    "\n",
    "# Detect the dominant hand from the number of NaN values.\n",
    "# Dominant hand will have less NaN values since it is in frame moving.\n",
    "def pre_process(x):\n",
    "    rhand = tf.gather(x, RHAND_IDX, axis=1)\n",
    "    lhand = tf.gather(x, LHAND_IDX, axis=1)\n",
    "    rpose = tf.gather(x, RPOSE_IDX, axis=1)\n",
    "    lpose = tf.gather(x, LPOSE_IDX, axis=1)\n",
    "    \n",
    "    rnan_idx = tf.reduce_any(tf.math.is_nan(rhand), axis=1)\n",
    "    lnan_idx = tf.reduce_any(tf.math.is_nan(lhand), axis=1)\n",
    "    \n",
    "    rnans = tf.math.count_nonzero(rnan_idx)\n",
    "    lnans = tf.math.count_nonzero(lnan_idx)\n",
    "    \n",
    "    # For dominant hand\n",
    "    if rnans > lnans:\n",
    "        hand = lhand\n",
    "        pose = lpose\n",
    "        \n",
    "        hand_x = hand[:, 0*(len(LHAND_IDX)//3) : 1*(len(LHAND_IDX)//3)]\n",
    "        hand_y = hand[:, 1*(len(LHAND_IDX)//3) : 2*(len(LHAND_IDX)//3)]\n",
    "        hand_z = hand[:, 2*(len(LHAND_IDX)//3) : 3*(len(LHAND_IDX)//3)]\n",
    "        hand = tf.concat([1-hand_x, hand_y, hand_z], axis=1)\n",
    "        \n",
    "        pose_x = pose[:, 0*(len(LPOSE_IDX)//3) : 1*(len(LPOSE_IDX)//3)]\n",
    "        pose_y = pose[:, 1*(len(LPOSE_IDX)//3) : 2*(len(LPOSE_IDX)//3)]\n",
    "        pose_z = pose[:, 2*(len(LPOSE_IDX)//3) : 3*(len(LPOSE_IDX)//3)]\n",
    "        pose = tf.concat([1-pose_x, pose_y, pose_z], axis=1)\n",
    "    else:\n",
    "        hand = rhand\n",
    "        pose = rpose\n",
    "    \n",
    "    hand_x = hand[:, 0*(len(LHAND_IDX)//3) : 1*(len(LHAND_IDX)//3)]\n",
    "    hand_y = hand[:, 1*(len(LHAND_IDX)//3) : 2*(len(LHAND_IDX)//3)]\n",
    "    hand_z = hand[:, 2*(len(LHAND_IDX)//3) : 3*(len(LHAND_IDX)//3)]\n",
    "    hand = tf.concat([hand_x[..., tf.newaxis], hand_y[..., tf.newaxis], hand_z[..., tf.newaxis]], axis=-1)\n",
    "    \n",
    "    mean = tf.math.reduce_mean(hand, axis=1)[:, tf.newaxis, :]\n",
    "    std = tf.math.reduce_std(hand, axis=1)[:, tf.newaxis, :]\n",
    "    hand = (hand - mean) / std\n",
    "\n",
    "    pose_x = pose[:, 0*(len(LPOSE_IDX)//3) : 1*(len(LPOSE_IDX)//3)]\n",
    "    pose_y = pose[:, 1*(len(LPOSE_IDX)//3) : 2*(len(LPOSE_IDX)//3)]\n",
    "    pose_z = pose[:, 2*(len(LPOSE_IDX)//3) : 3*(len(LPOSE_IDX)//3)]\n",
    "    pose = tf.concat([pose_x[..., tf.newaxis], pose_y[..., tf.newaxis], pose_z[..., tf.newaxis]], axis=-1)\n",
    "    \n",
    "    x = tf.concat([hand, pose], axis=1)\n",
    "    x = resize_pad(x)\n",
    "    \n",
    "    x = tf.where(tf.math.is_nan(x), tf.zeros_like(x), x)\n",
    "    x = tf.reshape(x, (FRAME_LEN, len(LHAND_IDX) + len(LPOSE_IDX)))\n",
    "    return x"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cea8d721",
   "metadata": {
    "papermill": {
     "duration": 0.021477,
     "end_time": "2023-11-26T15:22:03.740811",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.719334",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Create function to parse data from TFRecord format\n",
    "This function will read the TFRecord data and convert it to Tensors.\n",
    "It returns a tuple of tensors containing landmarks and phrases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "28df4b79",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:03.784725Z",
     "iopub.status.busy": "2023-11-26T15:22:03.784271Z",
     "iopub.status.idle": "2023-11-26T15:22:03.791931Z",
     "shell.execute_reply": "2023-11-26T15:22:03.791022Z"
    },
    "papermill": {
     "duration": 0.032111,
     "end_time": "2023-11-26T15:22:03.793924",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.761813",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def decode_fn(record_bytes):\n",
    "    schema = {COL: tf.io.VarLenFeature(dtype=tf.float32) for COL in FEATURE_COLUMNS}\n",
    "    schema[\"phrase\"] = tf.io.FixedLenFeature([], dtype=tf.string)\n",
    "    features = tf.io.parse_single_example(record_bytes, schema)\n",
    "    phrase = features[\"phrase\"]\n",
    "    landmarks = ([tf.sparse.to_dense(features[COL]) for COL in FEATURE_COLUMNS])\n",
    "    # Transpose to maintain the original shape of landmarks data.\n",
    "    landmarks = tf.transpose(landmarks)\n",
    "    \n",
    "    return landmarks, phrase"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f544936c",
   "metadata": {
    "papermill": {
     "duration": 0.020844,
     "end_time": "2023-11-26T15:22:03.835880",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.815036",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Create function to convert the data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e505d593",
   "metadata": {
    "papermill": {
     "duration": 0.020982,
     "end_time": "2023-11-26T15:22:03.879686",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.858704",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This function transposes and applies masks to the landmark coordinates. It also vectorizes the phrase corresponding to the landmarks using character_to_prediction_index.json"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ee4cc3a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:03.923419Z",
     "iopub.status.busy": "2023-11-26T15:22:03.923068Z",
     "iopub.status.idle": "2023-11-26T15:22:06.688677Z",
     "shell.execute_reply": "2023-11-26T15:22:06.687826Z"
    },
    "papermill": {
     "duration": 2.790124,
     "end_time": "2023-11-26T15:22:06.690984",
     "exception": false,
     "start_time": "2023-11-26T15:22:03.900860",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "table = tf.lookup.StaticHashTable(\n",
    "    initializer=tf.lookup.KeyValueTensorInitializer(\n",
    "        keys=list(char_to_num.keys()),\n",
    "        values=list(char_to_num.values()),\n",
    "    ),\n",
    "    default_value=tf.constant(-1),\n",
    "    name=\"class_weight\"\n",
    ")\n",
    "\n",
    "def convert_fn(landmarks, phrase):\n",
    "    # Add start and end pointers to phrase.\n",
    "    phrase = start_token + phrase + end_token\n",
    "    phrase = tf.strings.bytes_split(phrase)\n",
    "    phrase = table.lookup(phrase)\n",
    "    # Vectorize and add padding.\n",
    "    phrase = tf.pad(phrase, paddings=[[0, 64 - tf.shape(phrase)[0]]], mode = 'CONSTANT',\n",
    "                    constant_values = pad_token_idx)\n",
    "    # Apply pre_process function to the landmarks.\n",
    "    return pre_process(landmarks), phrase"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b97770d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-24T12:57:25.617449Z",
     "iopub.status.busy": "2023-11-24T12:57:25.616391Z",
     "iopub.status.idle": "2023-11-24T12:57:25.623529Z",
     "shell.execute_reply": "2023-11-24T12:57:25.622293Z",
     "shell.execute_reply.started": "2023-11-24T12:57:25.617406Z"
    },
    "papermill": {
     "duration": 0.021023,
     "end_time": "2023-11-26T15:22:06.733765",
     "exception": false,
     "start_time": "2023-11-26T15:22:06.712742",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Use the functions we defined above to create the final dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5c0632f",
   "metadata": {
    "papermill": {
     "duration": 0.021066,
     "end_time": "2023-11-26T15:22:06.776175",
     "exception": false,
     "start_time": "2023-11-26T15:22:06.755109",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Train and validation split/Create the final datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1ab20a97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:06.822541Z",
     "iopub.status.busy": "2023-11-26T15:22:06.822193Z",
     "iopub.status.idle": "2023-11-26T15:22:08.456699Z",
     "shell.execute_reply": "2023-11-26T15:22:08.455851Z"
    },
    "papermill": {
     "duration": 1.660381,
     "end_time": "2023-11-26T15:22:08.458959",
     "exception": false,
     "start_time": "2023-11-26T15:22:06.798578",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "batch_size = 64\n",
    "train_len = int(0.8 * len(tf_records))\n",
    "\n",
    "# Create a TFRecordDataset for training data, decode, convert, batch, prefetch, and cache\n",
    "train_ds = tf.data.TFRecordDataset(tf_records[:train_len]) \\\n",
    "    .map(decode_fn) \\\n",
    "    .map(convert_fn) \\\n",
    "    .batch(batch_size) \\\n",
    "    .prefetch(buffer_size=tf.data.AUTOTUNE) \\\n",
    "    .cache()\n",
    "\n",
    "# Create a TFRecordDataset for validation data, decode, convert, batch, prefetch, and cache\n",
    "valid_ds = tf.data.TFRecordDataset(tf_records[train_len:]) \\\n",
    "    .map(decode_fn) \\\n",
    "    .map(convert_fn) \\\n",
    "    .batch(batch_size) \\\n",
    "    .prefetch(buffer_size=tf.data.AUTOTUNE) \\\n",
    "    .cache()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "080680bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:08.504583Z",
     "iopub.status.busy": "2023-11-26T15:22:08.503802Z",
     "iopub.status.idle": "2023-11-26T15:22:08.938973Z",
     "shell.execute_reply": "2023-11-26T15:22:08.937957Z"
    },
    "papermill": {
     "duration": 0.460034,
     "end_time": "2023-11-26T15:22:08.941489",
     "exception": false,
     "start_time": "2023-11-26T15:22:08.481455",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Batch 1 - Features shape: (64, 200, 78), Labels shape: (64, 64)\n",
      "First sequence in the batch:\n",
      "Features:\n",
      "tf.Tensor(\n",
      "[[-0.27655613  1.5076838   2.3224409  ...  0.47083145  0.7710637\n",
      "  -3.7243094 ]\n",
      " [ 0.          0.          0.         ...  0.39278966  0.84587616\n",
      "  -3.1558092 ]\n",
      " [ 0.          0.          0.         ...  0.45422083  0.8396666\n",
      "  -3.5316234 ]\n",
      " ...\n",
      " [ 0.          0.          0.         ...  0.          0.\n",
      "   0.        ]\n",
      " [ 0.          0.          0.         ...  0.          0.\n",
      "   0.        ]\n",
      " [ 0.          0.          0.         ...  0.          0.\n",
      "   0.        ]], shape=(200, 78), dtype=float32)\n",
      "Labels:\n",
      "tf.Tensor(\n",
      "[60 18  0 34 49 36 36 42 39 46 52 50 36 61 59 59 59 59 59 59 59 59 59 59\n",
      " 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59\n",
      " 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59 59], shape=(64,), dtype=int32)\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i, element in enumerate(train_ds.take(1)):  \n",
    "    features, labels = element\n",
    "    print(f\"Batch {i + 1} - Features shape: {features.shape}, Labels shape: {labels.shape}\")\n",
    "    print(\"First sequence in the batch:\")\n",
    "    print(\"Features:\")\n",
    "    print(features[0])\n",
    "    print(\"Labels:\")\n",
    "    print(labels[0])\n",
    "    print(\"\\n\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0010e3d0",
   "metadata": {
    "papermill": {
     "duration": 0.021155,
     "end_time": "2023-11-26T15:22:08.984268",
     "exception": false,
     "start_time": "2023-11-26T15:22:08.963113",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Input Layers for Transformer Model\n",
    "\n",
    "Refernce - [Link](https://keras.io/examples/audio/transformer_asr/#define-the-transformer-input-layer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "da304c3d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:09.029022Z",
     "iopub.status.busy": "2023-11-26T15:22:09.028160Z",
     "iopub.status.idle": "2023-11-26T15:22:09.038123Z",
     "shell.execute_reply": "2023-11-26T15:22:09.037214Z"
    },
    "papermill": {
     "duration": 0.034606,
     "end_time": "2023-11-26T15:22:09.040143",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.005537",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class TokenEmbedding(layers.Layer):\n",
    "    def __init__(self, num_vocab=1000, maxlen=100, num_hid=64):\n",
    "        super().__init__()\n",
    "        self.emb = tf.keras.layers.Embedding(num_vocab, num_hid)\n",
    "        self.pos_emb = layers.Embedding(input_dim=maxlen, output_dim=num_hid)\n",
    "\n",
    "    def call(self, x):\n",
    "        maxlen = tf.shape(x)[-1]\n",
    "        x = self.emb(x)\n",
    "        positions = tf.range(start=0, limit=maxlen, delta=1)\n",
    "        positions = self.pos_emb(positions)\n",
    "        return x + positions\n",
    "\n",
    "\n",
    "class LandmarkEmbedding(layers.Layer):\n",
    "    def __init__(self, num_hid=64, maxlen=100):\n",
    "        super().__init__()\n",
    "        self.conv1 = tf.keras.layers.Conv1D(\n",
    "            num_hid, 11, strides=2, padding=\"same\", activation=\"relu\"\n",
    "        )\n",
    "        self.conv2 = tf.keras.layers.Conv1D(\n",
    "            num_hid, 11, strides=2, padding=\"same\", activation=\"relu\"\n",
    "        )\n",
    "        self.conv3 = tf.keras.layers.Conv1D(\n",
    "            num_hid, 11, strides=2, padding=\"same\", activation=\"relu\"\n",
    "        )\n",
    "\n",
    "    def call(self, x):\n",
    "        x = self.conv1(x)\n",
    "        x = self.conv2(x)\n",
    "        return self.conv3(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c8de7e1",
   "metadata": {
    "papermill": {
     "duration": 0.021337,
     "end_time": "2023-11-26T15:22:09.084160",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.062823",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Transformer Encoder Layer\n",
    "\n",
    "Refernce - [Link](https://keras.io/examples/audio/transformer_asr/#transformer-encoder-layer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "01ac931a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:09.128059Z",
     "iopub.status.busy": "2023-11-26T15:22:09.127719Z",
     "iopub.status.idle": "2023-11-26T15:22:09.136129Z",
     "shell.execute_reply": "2023-11-26T15:22:09.135190Z"
    },
    "papermill": {
     "duration": 0.032646,
     "end_time": "2023-11-26T15:22:09.138172",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.105526",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class TransformerEncoder(layers.Layer):\n",
    "    def __init__(self, embed_dim, num_heads, feed_forward_dim, rate=0.1):\n",
    "        super().__init__()\n",
    "        self.att = layers.MultiHeadAttention(num_heads=num_heads, key_dim=embed_dim)\n",
    "        self.ffn = keras.Sequential(\n",
    "            [\n",
    "                layers.Dense(feed_forward_dim, activation=\"relu\"),\n",
    "                layers.Dense(embed_dim),\n",
    "            ]\n",
    "        )\n",
    "        self.layernorm1 = layers.LayerNormalization(epsilon=1e-6)\n",
    "        self.layernorm2 = layers.LayerNormalization(epsilon=1e-6)\n",
    "        self.dropout1 = layers.Dropout(rate)\n",
    "        self.dropout2 = layers.Dropout(rate)\n",
    "\n",
    "    def call(self, inputs, training):\n",
    "        attn_output = self.att(inputs, inputs)\n",
    "        attn_output = self.dropout1(attn_output, training=training)\n",
    "        out1 = self.layernorm1(inputs + attn_output)\n",
    "        ffn_output = self.ffn(out1)\n",
    "        ffn_output = self.dropout2(ffn_output, training=training)\n",
    "        return self.layernorm2(out1 + ffn_output)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d7bb97b",
   "metadata": {
    "papermill": {
     "duration": 0.021051,
     "end_time": "2023-11-26T15:22:09.180276",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.159225",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Decoder Layer of Transformer Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8fed7a92",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:09.224204Z",
     "iopub.status.busy": "2023-11-26T15:22:09.223864Z",
     "iopub.status.idle": "2023-11-26T15:22:09.237258Z",
     "shell.execute_reply": "2023-11-26T15:22:09.236402Z"
    },
    "papermill": {
     "duration": 0.03747,
     "end_time": "2023-11-26T15:22:09.239172",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.201702",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Customized to add `training` variable\n",
    "# Reference: https://www.kaggle.com/code/shlomoron/aslfr-a-simple-transformer/notebook\n",
    "\n",
    "class TransformerDecoder(layers.Layer):\n",
    "    def __init__(self, embed_dim, num_heads, feed_forward_dim, dropout_rate=0.1):\n",
    "        super().__init__()\n",
    "        self.layernorm1 = layers.LayerNormalization(epsilon=1e-6)\n",
    "        self.layernorm2 = layers.LayerNormalization(epsilon=1e-6)\n",
    "        self.layernorm3 = layers.LayerNormalization(epsilon=1e-6)\n",
    "        self.self_att = layers.MultiHeadAttention(\n",
    "            num_heads=num_heads, key_dim=embed_dim\n",
    "        )\n",
    "        self.enc_att = layers.MultiHeadAttention(num_heads=num_heads, key_dim=embed_dim)\n",
    "        self.self_dropout = layers.Dropout(0.5)\n",
    "        self.enc_dropout = layers.Dropout(0.1)\n",
    "        self.ffn_dropout = layers.Dropout(0.1)\n",
    "        self.ffn = keras.Sequential(\n",
    "            [\n",
    "                layers.Dense(feed_forward_dim, activation=\"relu\"),\n",
    "                layers.Dense(embed_dim),\n",
    "            ]\n",
    "        )\n",
    "    def causal_attention_mask(self, batch_size, n_dest, n_src, dtype):\n",
    "        \"\"\"Masks the upper half of the dot product matrix in self attention.\n",
    "\n",
    "        This prevents flow of information from future tokens to current token.\n",
    "        1's in the lower triangle, counting from the lower right corner.\n",
    "        \"\"\"\n",
    "        i = tf.range(n_dest)[:, None]\n",
    "        j = tf.range(n_src)\n",
    "        m = i >= j - n_src + n_dest\n",
    "        mask = tf.cast(m, dtype)\n",
    "        mask = tf.reshape(mask, [1, n_dest, n_src])\n",
    "        mult = tf.concat(\n",
    "            [batch_size[..., tf.newaxis], tf.constant([1, 1], dtype=tf.int32)], 0\n",
    "        )\n",
    "        return tf.tile(mask, mult)\n",
    "    def call(self, enc_out, target, training):\n",
    "        input_shape = tf.shape(target)\n",
    "        batch_size = input_shape[0]\n",
    "        seq_len = input_shape[1]\n",
    "        causal_mask = self.causal_attention_mask(batch_size, seq_len, seq_len, tf.bool)\n",
    "        target_att = self.self_att(target, target, attention_mask=causal_mask)\n",
    "        target_norm = self.layernorm1(target + self.self_dropout(target_att, training = training))\n",
    "        enc_out = self.enc_att(target_norm, enc_out)\n",
    "        enc_out_norm = self.layernorm2(self.enc_dropout(enc_out, training = training) + target_norm)\n",
    "        ffn_out = self.ffn(enc_out_norm)\n",
    "        ffn_out_norm = self.layernorm3(enc_out_norm + self.ffn_dropout(ffn_out, training = training))\n",
    "        return ffn_out_norm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce77d15d",
   "metadata": {
    "papermill": {
     "duration": 0.020595,
     "end_time": "2023-11-26T15:22:09.280739",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.260144",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Creation of Transformer Model\n",
    "\n",
    "Reference - [Link](https://keras.io/examples/audio/transformer_asr/#complete-the-transformer-model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ca277061",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:09.324236Z",
     "iopub.status.busy": "2023-11-26T15:22:09.323915Z",
     "iopub.status.idle": "2023-11-26T15:22:09.345541Z",
     "shell.execute_reply": "2023-11-26T15:22:09.344620Z"
    },
    "papermill": {
     "duration": 0.045823,
     "end_time": "2023-11-26T15:22:09.347475",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.301652",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Customized to add edit_dist metric and training variable.\n",
    "# Reference:\n",
    "# https://www.kaggle.com/code/irohith/aslfr-transformer/notebook\n",
    "# https://www.kaggle.com/code/shlomoron/aslfr-a-simple-transformer/notebook\n",
    "\n",
    "class Transformer(keras.Model):\n",
    "    def __init__(self, num_hid=64, num_head=2, num_feed_forward=128, source_maxlen=100, target_maxlen=100, num_layers_enc=4, num_layers_dec=1, num_classes=60):\n",
    "        super().__init__()\n",
    "        self.loss_metric = keras.metrics.Mean(name=\"loss\")\n",
    "        self.acc_metric = keras.metrics.SparseCategoricalAccuracy(name=\"accuracy\")\n",
    "        self.num_layers_enc = num_layers_enc\n",
    "        self.num_layers_dec = num_layers_dec\n",
    "        self.target_maxlen = target_maxlen\n",
    "        self.num_classes = num_classes\n",
    "\n",
    "        self.enc_input = LandmarkEmbedding(num_hid=num_hid, maxlen=source_maxlen)\n",
    "        self.dec_input = TokenEmbedding(num_vocab=num_classes, maxlen=target_maxlen, num_hid=num_hid)\n",
    "\n",
    "        self.encoder = keras.Sequential(\n",
    "            [self.enc_input]\n",
    "            + [TransformerEncoder(num_hid, num_head, num_feed_forward) for _ in range(num_layers_enc)]\n",
    "        )\n",
    "\n",
    "        for i in range(num_layers_dec):\n",
    "            setattr(self, f\"dec_layer_{i}\", TransformerDecoder(num_hid, num_head, num_feed_forward))\n",
    "\n",
    "        self.classifier = layers.Dense(num_classes)\n",
    "\n",
    "    def decode(self, enc_out, target, training):\n",
    "        y = self.dec_input(target)\n",
    "        for i in range(self.num_layers_dec):\n",
    "            y = getattr(self, f\"dec_layer_{i}\")(enc_out, y, training)\n",
    "        return y\n",
    "\n",
    "    def call(self, inputs, training):\n",
    "        source = inputs[0]\n",
    "        target = inputs[1]\n",
    "        x = self.encoder(source, training)\n",
    "        y = self.decode(x, target, training)\n",
    "        return self.classifier(y)\n",
    "\n",
    "    @property\n",
    "    def metrics(self):\n",
    "        return [self.loss_metric, self.acc_metric]\n",
    "\n",
    "    def train_step(self, batch):\n",
    "        source = batch[0]\n",
    "        target = batch[1]\n",
    "\n",
    "        input_shape = tf.shape(target)\n",
    "        batch_size = input_shape[0]\n",
    "\n",
    "        dec_input = target[:, :-1]\n",
    "        dec_target = target[:, 1:]\n",
    "        with tf.GradientTape() as tape:\n",
    "            preds = self([source, dec_input], training=True)\n",
    "            one_hot = tf.one_hot(dec_target, depth=self.num_classes)\n",
    "            mask = tf.math.logical_not(tf.math.equal(dec_target, pad_token_idx))\n",
    "            loss = self.compiled_loss(one_hot, preds, sample_weight=mask)\n",
    "        trainable_vars = self.trainable_variables\n",
    "        gradients = tape.gradient(loss, trainable_vars)\n",
    "        self.optimizer.apply_gradients(zip(gradients, trainable_vars))\n",
    "\n",
    "        self.loss_metric.update_state(loss)\n",
    "        self.acc_metric.update_state(dec_target, preds, sample_weight=mask)\n",
    "\n",
    "        return {\"loss\": self.loss_metric.result(), \"accuracy\": self.acc_metric.result()}\n",
    "\n",
    "    def test_step(self, batch):\n",
    "        source = batch[0]\n",
    "        target = batch[1]\n",
    "\n",
    "        input_shape = tf.shape(target)\n",
    "        batch_size = input_shape[0]\n",
    "\n",
    "        dec_input = target[:, :-1]\n",
    "        dec_target = target[:, 1:]\n",
    "        preds = self([source, dec_input], training=False)\n",
    "        one_hot = tf.one_hot(dec_target, depth=self.num_classes)\n",
    "        mask = tf.math.logical_not(tf.math.equal(dec_target, pad_token_idx))\n",
    "        loss = self.compiled_loss(one_hot, preds, sample_weight=mask)\n",
    "\n",
    "        self.loss_metric.update_state(loss)\n",
    "        self.acc_metric.update_state(dec_target, preds, sample_weight=mask)\n",
    "\n",
    "        return {\"loss\": self.loss_metric.result(), \"accuracy\": self.acc_metric.result()}\n",
    "\n",
    "    def generate(self, source, target_start_token_idx):\n",
    "        bs = tf.shape(source)[0]\n",
    "        enc = self.encoder(source, training=False)\n",
    "        dec_input = tf.ones((bs, 1), dtype=tf.int32) * target_start_token_idx\n",
    "        dec_logits = []\n",
    "        for i in range(self.target_maxlen - 1):\n",
    "            dec_out = self.decode(enc, dec_input, training=False)\n",
    "            logits = self.classifier(dec_out)\n",
    "            logits = tf.argmax(logits, axis=-1, output_type=tf.int32)\n",
    "            last_logit = logits[:, -1][..., tf.newaxis]\n",
    "            dec_logits.append(last_logit)\n",
    "            dec_input = tf.concat([dec_input, last_logit], axis=-1)\n",
    "        return dec_input\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c47fc623",
   "metadata": {
    "papermill": {
     "duration": 0.020954,
     "end_time": "2023-11-26T15:22:09.390309",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.369355",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Callback function to display prediction-ground truth and accuracy\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "215fad27",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:09.434260Z",
     "iopub.status.busy": "2023-11-26T15:22:09.433928Z",
     "iopub.status.idle": "2023-11-26T15:22:09.443553Z",
     "shell.execute_reply": "2023-11-26T15:22:09.442679Z"
    },
    "papermill": {
     "duration": 0.033999,
     "end_time": "2023-11-26T15:22:09.445568",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.411569",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class DisplayOutputs(keras.callbacks.Callback):\n",
    "    def __init__(\n",
    "        self, batch, idx_to_token, target_start_token_idx=60, target_end_token_idx=61\n",
    "    ):\n",
    "        self.batch = batch\n",
    "        self.target_start_token_idx = target_start_token_idx\n",
    "        self.target_end_token_idx = target_end_token_idx\n",
    "        self.idx_to_char = idx_to_token\n",
    "\n",
    "    def on_epoch_end(self, epoch, logs=None):\n",
    "        if epoch % 50 != 0:\n",
    "            return\n",
    "        source = self.batch[0]\n",
    "        target = self.batch[1].numpy()\n",
    "        bs = tf.shape(source)[0]\n",
    "        preds = self.model.generate(source, self.target_start_token_idx)\n",
    "        preds = preds.numpy()\n",
    "        \n",
    "        for i in range(bs):\n",
    "            target_text = \"\".join([self.idx_to_char[_] for _ in target[i, :]])\n",
    "            prediction = \"\"\n",
    "            for idx in preds[i, :]:\n",
    "                prediction += self.idx_to_char[idx]\n",
    "                if idx == self.target_end_token_idx:\n",
    "                    break\n",
    "            \n",
    "            accuracy = logs.get('accuracy')  # Access accuracy from the training logs\n",
    "            \n",
    "            print(f\"Epoch {epoch + 1}, Accuracy: {accuracy}\")\n",
    "            print(f\"Target:     {target_text.replace('-', '')}\")\n",
    "            print(f\"Prediction: {prediction}\\n\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ddfb19d",
   "metadata": {
    "papermill": {
     "duration": 0.020783,
     "end_time": "2023-11-26T15:22:09.487515",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.466732",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Training of Transformer Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f6587625",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:22:09.531079Z",
     "iopub.status.busy": "2023-11-26T15:22:09.530750Z",
     "iopub.status.idle": "2023-11-26T15:33:31.267642Z",
     "shell.execute_reply": "2023-11-26T15:33:31.266568Z"
    },
    "papermill": {
     "duration": 682.415214,
     "end_time": "2023-11-26T15:33:31.923829",
     "exception": false,
     "start_time": "2023-11-26T15:22:09.508615",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/40\n",
      "    632/Unknown - 74s 84ms/step - loss: 0.8911 - accuracy: 0.2325Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <2796 west golden willow drive>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <177 stert we werererere>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <9734719887>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+35-11-1-119>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <4977236992>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <594-263-2626>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <reallyloud.co.uk/simaii>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <deron comanin>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <kkaicd1.pixnet.net>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <alanelallangelane>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <8260 john r bowdoin>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <886 warin werin>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <56 paper birch drive>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <560-201-0300>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <gandchudaihardcor.html>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <319 halarangh harth re>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <2708 west 77th>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <786-201-2010>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <https://www.keainfo.gr>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <antps://ww.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <288 fuller lake>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <288-851-1311>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <mser/okiguide>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <erelin chan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <220 north 47th avenue east>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <223 sthan haneran ran>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <www.sudinfo.be>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.rorinder>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <69 grant point>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <269 be corin>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <fibrain.pl/chapter145/thanghr>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <9011 sthath rth 113>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <+3515218895>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+33-333-3-39>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <viapierogobetti/brandilove>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <233 sinin ch corinerine>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <amir le>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <anin corin>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <automantenimientosa>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <maresenenenest>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <6499 nfd 5053>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <695-808-9333>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <7870 preston place>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+98-851-181-5-118-5>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <6870 scabisuit lane>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <687 sinian st rin road>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <sunshine mayer>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <ananan haranerererere>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <4082494707>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <443-383-7630>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <arabradio.us/vana>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <anererestanestanan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <televisoresponse>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <506 rere re ranan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <www.voices.com/bitesize>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.corichilililin>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <qd.razavi.ac.ir/bunya>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <deroneranere ranen>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <+246987508002294>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+26-058-0-9-5-8-55>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <+2666480514>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <226-800-0680>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <2257645994>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <225-444-4549>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <35816 webwood>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <380-000-0000>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <liana deleon>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <alan staneran>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     </p21sistemas/sharps_carbines>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <https://ww.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <www.boehringeringelheim.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.chinghingerind>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <2901092582>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <392 stest 10>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <102 flagstad>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <191 st balan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     </verkstader/20180101>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <320 rout rtelll>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <myanmarsocialonlinemedia.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <anerestestestestes>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <bunkerbranch.tumblr.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <4602 stharth rourth roure>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <+8286698863353>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+81-681-6-1-6-82-33>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <9464 east woods edge way>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <251 stast rast rarararathan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <4632526021>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <462-323-3222>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <martin+blando/>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <ande cortheronge>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <beloshveyka.ru/105>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <beranantan rantert re>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <bid.auctionbymayo.com/71063>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <ererin corestert>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <7384391127>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <335-353-1353>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <www.twitchquotes.com/>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.stomas.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <5016 east paquin street>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <506 stanan st st ste>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <2292979260>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <224-266-7666>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <9186054830>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <918-818-1-53>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <brandee tran>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <300 re corer>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <5061 williamsburg drive east>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <cort raranerineranest>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <certuspro.com/bloqueosjalapa>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <corestestestestestaste>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <www.tudecora.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <266 stere re core>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <+279053128>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+31-31-3-938>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <rachael salas>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <13 h harthere>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <9525366907>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <535-369-5690>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <963 crested owl>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <993 ste re roallad>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <2886 will teasley>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <2868 lallan la>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <josie savage>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <jane stengeron>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <4127407457>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <444-313-1448>\n",
      "\n",
      "Epoch 1, Accuracy: 0.23248383402824402\n",
      "Target:     <www.tornadoshop.cz/cornelius>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.coromanderond>\n",
      "\n",
      "632/632 [==============================] - 98s 122ms/step - loss: 0.8911 - accuracy: 0.2325 - val_loss: 0.8044 - val_accuracy: 0.3147\n",
      "Epoch 2/40\n",
      "632/632 [==============================] - 24s 39ms/step - loss: 0.7636 - accuracy: 0.3646 - val_loss: 0.7118 - val_accuracy: 0.4355\n",
      "Epoch 3/40\n",
      "632/632 [==============================] - 24s 38ms/step - loss: 0.6752 - accuracy: 0.4789 - val_loss: 0.6423 - val_accuracy: 0.5223\n",
      "Epoch 4/40\n",
      "632/632 [==============================] - 24s 38ms/step - loss: 0.6202 - accuracy: 0.5440 - val_loss: 0.6080 - val_accuracy: 0.5615\n",
      "Epoch 5/40\n",
      "632/632 [==============================] - 24s 38ms/step - loss: 0.5870 - accuracy: 0.5825 - val_loss: 0.5870 - val_accuracy: 0.5860\n",
      "Epoch 6/40\n",
      "632/632 [==============================] - 24s 38ms/step - loss: 0.5621 - accuracy: 0.6109 - val_loss: 0.5725 - val_accuracy: 0.6030\n",
      "Epoch 7/40\n",
      "632/632 [==============================] - 24s 39ms/step - loss: 0.5417 - accuracy: 0.6340 - val_loss: 0.5579 - val_accuracy: 0.6215\n",
      "Epoch 8/40\n",
      "632/632 [==============================] - 24s 39ms/step - loss: 0.5239 - accuracy: 0.6552 - val_loss: 0.5445 - val_accuracy: 0.6360\n",
      "Epoch 9/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.5086 - accuracy: 0.6732 - val_loss: 0.5351 - val_accuracy: 0.6489\n",
      "Epoch 10/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4946 - accuracy: 0.6899 - val_loss: 0.5252 - val_accuracy: 0.6601\n",
      "Epoch 11/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4823 - accuracy: 0.7040 - val_loss: 0.5192 - val_accuracy: 0.6682\n",
      "Epoch 12/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4711 - accuracy: 0.7170 - val_loss: 0.5135 - val_accuracy: 0.6752\n",
      "Epoch 13/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4618 - accuracy: 0.7277 - val_loss: 0.5105 - val_accuracy: 0.6798\n",
      "Epoch 14/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4530 - accuracy: 0.7377 - val_loss: 0.5082 - val_accuracy: 0.6830\n",
      "Epoch 15/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4456 - accuracy: 0.7463 - val_loss: 0.5079 - val_accuracy: 0.6846\n",
      "Epoch 16/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4388 - accuracy: 0.7541 - val_loss: 0.5100 - val_accuracy: 0.6833\n",
      "Epoch 17/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4315 - accuracy: 0.7622 - val_loss: 0.5087 - val_accuracy: 0.6858\n",
      "Epoch 18/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4245 - accuracy: 0.7704 - val_loss: 0.5085 - val_accuracy: 0.6880\n",
      "Epoch 19/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4184 - accuracy: 0.7772 - val_loss: 0.5078 - val_accuracy: 0.6901\n",
      "Epoch 20/40\n",
      "632/632 [==============================] - 25s 40ms/step - loss: 0.4126 - accuracy: 0.7839 - val_loss: 0.5086 - val_accuracy: 0.6909\n",
      "Epoch 21/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4078 - accuracy: 0.7891 - val_loss: 0.5105 - val_accuracy: 0.6916\n",
      "Epoch 22/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.4031 - accuracy: 0.7949 - val_loss: 0.5143 - val_accuracy: 0.6876\n",
      "Epoch 23/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.3995 - accuracy: 0.7985 - val_loss: 0.5141 - val_accuracy: 0.6873\n",
      "Epoch 24/40\n",
      "632/632 [==============================] - 25s 39ms/step - loss: 0.3958 - accuracy: 0.8021 - val_loss: 0.5151 - val_accuracy: 0.6890\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "\n",
    "batch = next(iter(valid_ds))\n",
    "idx_to_char = list(char_to_num.keys())\n",
    "display_cb = DisplayOutputs(batch, idx_to_char, target_start_token_idx=char_to_num['<'], target_end_token_idx=char_to_num['>'])\n",
    "\n",
    "model = Transformer(\n",
    "    num_hid=200,\n",
    "    num_head=4,\n",
    "    num_feed_forward=400,\n",
    "    source_maxlen=FRAME_LEN,\n",
    "    target_maxlen=64,\n",
    "    num_layers_enc=2,\n",
    "    num_layers_dec=1,\n",
    "    num_classes=62\n",
    ")\n",
    "\n",
    "loss_fn = tf.keras.losses.CategoricalCrossentropy(from_logits=True, label_smoothing=0.1)\n",
    "\n",
    "# Define EarlyStopping callback\n",
    "early_stopping = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)\n",
    "\n",
    "optimizer = keras.optimizers.Adam(0.0001)\n",
    "model.compile(optimizer=optimizer, loss=loss_fn, metrics=['accuracy'])\n",
    "\n",
    "# Include EarlyStopping callback in the training process\n",
    "history = model.fit(train_ds, validation_data=valid_ds, callbacks=[display_cb,early_stopping], epochs=40)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bc4270d",
   "metadata": {
    "papermill": {
     "duration": 0.649581,
     "end_time": "2023-11-26T15:33:33.287347",
     "exception": false,
     "start_time": "2023-11-26T15:33:32.637766",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We have Implemented early stopping during training to stop training when the validation performance stops improving. This helps prevent overfitting and saves training time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ab777e1d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:33:34.653567Z",
     "iopub.status.busy": "2023-11-26T15:33:34.653207Z",
     "iopub.status.idle": "2023-11-26T15:33:37.112727Z",
     "shell.execute_reply": "2023-11-26T15:33:37.111861Z"
    },
    "papermill": {
     "duration": 3.168296,
     "end_time": "2023-11-26T15:33:37.114869",
     "exception": false,
     "start_time": "2023-11-26T15:33:33.946573",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "164/164 [==============================] - 2s 15ms/step - loss: 0.5078 - accuracy: 0.6901\n",
      "Validation Loss: 0.5078\n",
      "Validation Accuracy: 69.01%\n"
     ]
    }
   ],
   "source": [
    "val_loss, val_accuracy = model.evaluate(valid_ds)\n",
    "\n",
    "print(f\"Validation Loss: {val_loss:.4f}\")\n",
    "print(f\"Validation Accuracy: {val_accuracy * 100:.2f}%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e0871c38",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:33:38.423583Z",
     "iopub.status.busy": "2023-11-26T15:33:38.423221Z",
     "iopub.status.idle": "2023-11-26T15:33:38.774602Z",
     "shell.execute_reply": "2023-11-26T15:33:38.773567Z"
    },
    "papermill": {
     "duration": 1.009594,
     "end_time": "2023-11-26T15:33:38.778160",
     "exception": false,
     "start_time": "2023-11-26T15:33:37.768566",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot(history.history['accuracy'], label='Training Accuracy')\n",
    "plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.savefig('training_validation_accuracy_plot.png')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "604ad6a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:33:40.211342Z",
     "iopub.status.busy": "2023-11-26T15:33:40.210972Z",
     "iopub.status.idle": "2023-11-26T15:33:40.587197Z",
     "shell.execute_reply": "2023-11-26T15:33:40.586254Z"
    },
    "papermill": {
     "duration": 1.102632,
     "end_time": "2023-11-26T15:33:40.589234",
     "exception": false,
     "start_time": "2023-11-26T15:33:39.486602",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot training loss\n",
    "plt.plot(history.history['loss'], label='Training Loss')\n",
    "# Plot validation loss\n",
    "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
    "\n",
    "# Customize the plot\n",
    "plt.title('Training and Validation Loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.savefig('training_validation_loss_plot.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "637dbe0a",
   "metadata": {
    "papermill": {
     "duration": 0.653185,
     "end_time": "2023-11-26T15:33:41.920567",
     "exception": false,
     "start_time": "2023-11-26T15:33:41.267382",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "From the provided plots, it's evident that the model's performance, as measured by validation accuracy and validation loss, remains relatively stable over the training epochs. This indicates a potential issue with the model's ability to generalize beyond the training data, suggesting the need for further exploration into hyperparameter tuning, regularization techniques, or potential data-related challenges to improve overall model performance on unseen data."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f37fb99",
   "metadata": {
    "papermill": {
     "duration": 0.647843,
     "end_time": "2023-11-26T15:33:43.279796",
     "exception": false,
     "start_time": "2023-11-26T15:33:42.631953",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Hyperparameter tuning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "8a2e612c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T15:33:44.596239Z",
     "iopub.status.busy": "2023-11-26T15:33:44.595884Z",
     "iopub.status.idle": "2023-11-26T19:01:41.740252Z",
     "shell.execute_reply": "2023-11-26T19:01:41.739280Z"
    },
    "papermill": {
     "duration": 12477.807383,
     "end_time": "2023-11-26T19:01:41.742517",
     "exception": false,
     "start_time": "2023-11-26T15:33:43.935134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trial 10 Complete [00h 06m 58s]\n",
      "val_accuracy: 0.2087106555700302\n",
      "\n",
      "Best val_accuracy So Far: 0.7292030453681946\n",
      "Total elapsed time: 03h 10m 35s\n",
      "Best Hyperparameters: {'num_hid': 200, 'num_head': 6, 'num_feed_forward': 700, 'num_layers_enc': 3, 'num_layers_dec': 2, 'learning_rate': 0.0001}\n",
      "Epoch 1/100\n",
      "    631/Unknown - 66s 69ms/step - loss: 0.8557 - accuracy: 0.2621Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <2796 west golden willow drive>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <1779 sthe 1010 10th road>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <9734719887>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <https://ww.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <4977236992>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <949-146-1222>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <reallyloud.co.uk/simaii>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <lelen monder>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <kkaicd1.pixnet.net>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <https://ww.comalanga.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <8260 john r bowdoin>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <8866 westh bron>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <56 paper birch drive>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <561-171-1717>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <gandchudaihardcor.html>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <3109 changh changh road>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <2708 west 77th>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <786-201-2111>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <https://www.keainfo.gr>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <alan harth har>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <288 fuller lake>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <288-951-1111>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <mser/okiguide>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <seran halle>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <220 north 47th avenue east>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <222 sth hane hange sth st>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <www.sudinfo.be>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.ruraricer>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <69 grant point>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <639 shar hay>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <fibrain.pl/chapter145/thanghr>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <brinan haland 111>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <+3515218895>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+33-33-13-15-898>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <viapierogobetti/brandilove>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <222 mill harin hine rive>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <amir le>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <anan mille>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <automantenimientosa>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <maren manestes>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <6499 nfd 5053>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <699-959-8513>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <7870 preston place>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+991-898-11-81-85>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <6870 scabisuit lane>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <687 sara staila stroad>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <sunshine mayer>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <anthan hananer>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <4082494707>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <482-938-9106>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <arabradio.us/vana>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <alanala berere>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <televisoresponse>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <1000 corth cor>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <www.voices.com/bitesize>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.belelice.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <qd.razavi.ac.ir/bunya>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <delana sthereres>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <+246987508002294>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+42-98-98-19-9-29-29>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <+2666480514>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <220-806-6818>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <2257645994>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <232-444-4994>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <35816 webwood>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <3810 corth coa>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <liana deleon>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <alan sanan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     </p21sistemas/sharps_carbines>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <https://ww.chasteres.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <www.boehringeringelheim.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.chingheringhange.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <2901092582>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <290-911-1112>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <102 flagstad>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <1929 sallan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     </verkstader/20180101>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <2101 south 111>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <myanmarsocialonlinemedia.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <alanelesterestes.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <bunkerbranch.tumblr.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <bunganesthusther.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <+8286698863353>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+82-24-41-22-43-233>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <9464 east woods edge way>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.stasthastes.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <4632526021>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <466-323-2323>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <martin+blando/>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <https://ww.comangela.com>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <beloshveyka.ru/105>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <bellandandanger.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <bid.auctionbymayo.com/71063>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <meresta belalll>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <7384391127>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <733-959-1327>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <www.twitchquotes.com/>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.stalales.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <5016 east paquin street>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <516 stan sthan strest>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <2292979260>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <299-434-4266>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <9186054830>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <911-111-9153>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <brandee tran>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <brane lerel>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <5061 williamsburg drive east>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <cortelasteresterane roa>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <certuspro.com/bloqueosjalapa>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <crestestestestes.com/>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <www.tudecora.com>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.eresteresteres>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <+279053128>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <+21-99-93-91-18>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <rachael salas>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <https://ww.coman>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <9525366907>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <932-636-6909>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <963 crested owl>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <993 stest 1006>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <2886 will teasley>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <2868 lalla lan>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <josie savage>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <chanes sthange>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <4127407457>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <444-101-6747>\n",
      "\n",
      "Epoch 1, Accuracy: 0.26208019256591797\n",
      "Target:     <www.tornadoshop.cz/cornelius>PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP\n",
      "Prediction: <www.destererende.com>\n",
      "\n",
      "632/632 [==============================] - 74s 83ms/step - loss: 0.8555 - accuracy: 0.2621 - val_loss: 0.7628 - val_accuracy: 0.3629\n",
      "Epoch 2/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.7122 - accuracy: 0.4249 - val_loss: 0.6524 - val_accuracy: 0.5055\n",
      "Epoch 3/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.6153 - accuracy: 0.5472 - val_loss: 0.5768 - val_accuracy: 0.5963\n",
      "Epoch 4/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.5579 - accuracy: 0.6156 - val_loss: 0.5404 - val_accuracy: 0.6405\n",
      "Epoch 5/100\n",
      "632/632 [==============================] - 48s 75ms/step - loss: 0.5222 - accuracy: 0.6571 - val_loss: 0.5222 - val_accuracy: 0.6616\n",
      "Epoch 6/100\n",
      "632/632 [==============================] - 48s 75ms/step - loss: 0.4967 - accuracy: 0.6867 - val_loss: 0.5036 - val_accuracy: 0.6839\n",
      "Epoch 7/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4775 - accuracy: 0.7088 - val_loss: 0.4929 - val_accuracy: 0.6955\n",
      "Epoch 8/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4620 - accuracy: 0.7263 - val_loss: 0.4853 - val_accuracy: 0.7046\n",
      "Epoch 9/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4491 - accuracy: 0.7412 - val_loss: 0.4784 - val_accuracy: 0.7135\n",
      "Epoch 10/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4378 - accuracy: 0.7542 - val_loss: 0.4740 - val_accuracy: 0.7196\n",
      "Epoch 11/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4279 - accuracy: 0.7652 - val_loss: 0.4720 - val_accuracy: 0.7221\n",
      "Epoch 12/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4188 - accuracy: 0.7754 - val_loss: 0.4692 - val_accuracy: 0.7263\n",
      "Epoch 13/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4107 - accuracy: 0.7851 - val_loss: 0.4714 - val_accuracy: 0.7253\n",
      "Epoch 14/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.4035 - accuracy: 0.7929 - val_loss: 0.4684 - val_accuracy: 0.7314\n",
      "Epoch 15/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.3972 - accuracy: 0.7995 - val_loss: 0.4693 - val_accuracy: 0.7305\n",
      "Epoch 16/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.3908 - accuracy: 0.8068 - val_loss: 0.4718 - val_accuracy: 0.7279\n",
      "Epoch 17/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.3844 - accuracy: 0.8141 - val_loss: 0.4702 - val_accuracy: 0.7301\n",
      "Epoch 18/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.3785 - accuracy: 0.8212 - val_loss: 0.4722 - val_accuracy: 0.7301\n",
      "Epoch 19/100\n",
      "632/632 [==============================] - 47s 75ms/step - loss: 0.3729 - accuracy: 0.8274 - val_loss: 0.4725 - val_accuracy: 0.7313\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "from keras_tuner.tuners import RandomSearch\n",
    "from kerastuner.engine import tuner_utils\n",
    "\n",
    "# Assume FRAME_LEN is defined\n",
    "FRAME_LEN = ...\n",
    "\n",
    "# Define the model-building function\n",
    "def build_model(hp):\n",
    "    model = Transformer(\n",
    "        num_hid=hp.Int('num_hid', min_value=100, max_value=400, step=50),\n",
    "        num_head=hp.Int('num_head', min_value=2, max_value=8, step=1),\n",
    "        num_feed_forward=hp.Int('num_feed_forward', min_value=200, max_value=800, step=100),\n",
    "        source_maxlen=FRAME_LEN,\n",
    "        target_maxlen=64,\n",
    "        num_layers_enc=hp.Int('num_layers_enc', min_value=1, max_value=3, step=1),\n",
    "        num_layers_dec=hp.Int('num_layers_dec', min_value=1, max_value=3, step=1),\n",
    "        num_classes=62\n",
    "    )\n",
    "\n",
    "    loss_fn = tf.keras.losses.CategoricalCrossentropy(from_logits=True, label_smoothing=0.1)\n",
    "\n",
    "    optimizer = keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-4, 1e-5, 1e-6]))\n",
    "\n",
    "    model.compile(optimizer=optimizer, loss=loss_fn, metrics=['accuracy'])\n",
    "    return model\n",
    "\n",
    "# Instantiate the RandomSearch tuner with 'val_accuracy' as the objective\n",
    "tuner = RandomSearch(\n",
    "    build_model,\n",
    "    objective='val_accuracy',\n",
    "    max_trials=10,\n",
    "    directory='my_tuning_directory',\n",
    "    project_name='my_transformer_tuning',\n",
    ")\n",
    "\n",
    "# Define EarlyStopping callback\n",
    "early_stopping = EarlyStopping(monitor='val_accuracy', patience=5, restore_best_weights=True)\n",
    "\n",
    "# Perform the hyperparameter search with the callback\n",
    "tuner.search(train_ds, validation_data=valid_ds, epochs=30, callbacks=[early_stopping])\n",
    "\n",
    "# Get the best hyperparameters\n",
    "best_hps = tuner.get_best_hyperparameters(num_trials=1)[0]\n",
    "print(f\"Best Hyperparameters: {best_hps.values}\")\n",
    "\n",
    "# Build the final model with the best hyperparameters\n",
    "final_model = tuner.hypermodel.build(best_hps)\n",
    "\n",
    "# Compile the final model\n",
    "final_model.compile(optimizer=final_model.optimizer, loss=loss_fn, metrics=['accuracy'])\n",
    "\n",
    "# Include EarlyStopping callback in the training process\n",
    "history = final_model.fit(train_ds, validation_data=valid_ds, callbacks=[display_cb, early_stopping], epochs=100)\n",
    "\n",
    "# Save the final model in HDF5 format\n",
    "final_model.save(\"final_model\", save_format=\"tf\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ebffa002",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:01:45.114855Z",
     "iopub.status.busy": "2023-11-26T19:01:45.114481Z",
     "iopub.status.idle": "2023-11-26T19:01:49.467559Z",
     "shell.execute_reply": "2023-11-26T19:01:49.466666Z"
    },
    "papermill": {
     "duration": 5.998982,
     "end_time": "2023-11-26T19:01:49.469687",
     "exception": false,
     "start_time": "2023-11-26T19:01:43.470705",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<keras.src.saving.legacy.saved_model.load.Transformer at 0x7c5d3f755ff0>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_model = tf.keras.models.load_model(\"final_model\")\n",
    "final_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "66df9aaa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:01:52.861758Z",
     "iopub.status.busy": "2023-11-26T19:01:52.860843Z",
     "iopub.status.idle": "2023-11-26T19:01:52.867118Z",
     "shell.execute_reply": "2023-11-26T19:01:52.866232Z"
    },
    "papermill": {
     "duration": 1.62347,
     "end_time": "2023-11-26T19:01:52.869040",
     "exception": false,
     "start_time": "2023-11-26T19:01:51.245570",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'num_hid': 200,\n",
       " 'num_head': 6,\n",
       " 'num_feed_forward': 700,\n",
       " 'num_layers_enc': 3,\n",
       " 'num_layers_dec': 2,\n",
       " 'learning_rate': 0.0001}"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_hps.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "8b7922df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:01:56.245305Z",
     "iopub.status.busy": "2023-11-26T19:01:56.244940Z",
     "iopub.status.idle": "2023-11-26T19:01:58.113757Z",
     "shell.execute_reply": "2023-11-26T19:01:58.112804Z"
    },
    "papermill": {
     "duration": 3.482221,
     "end_time": "2023-11-26T19:01:58.115653",
     "exception": false,
     "start_time": "2023-11-26T19:01:54.633432",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Get the best trials\n",
    "best_trials = tuner.oracle.get_best_trials(num_trials=5)\n",
    "\n",
    "# Extract relevant information\n",
    "val_acc = [trial.metrics.get_last_value('val_accuracy') for trial in best_trials]\n",
    "learning_rates = [trial.hyperparameters.get('learning_rate') for trial in best_trials]\n",
    "num_heads = [trial.hyperparameters.get('num_head') for trial in best_trials]\n",
    "num_layers_enc = [trial.hyperparameters.get('num_layers_enc') for trial in best_trials]\n",
    "num_layers_dec = [trial.hyperparameters.get('num_layers_dec') for trial in best_trials]\n",
    "\n",
    "# Plot hyperparameter vs. validation accuracy\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "# Plot and save Learning Rate vs. Validation Accuracy\n",
    "plt.subplot(2, 2, 1)\n",
    "plt.scatter(learning_rates, val_acc)\n",
    "plt.title('Learning Rate vs. Validation Accuracy')\n",
    "plt.xlabel('Learning Rate')\n",
    "plt.ylabel('Validation Accuracy')\n",
    "plt.savefig('learning_rate_vs_validation_accuracy.png')\n",
    "\n",
    "# Plot and save Number of Heads vs. Validation Accuracy\n",
    "plt.subplot(2, 2, 2)\n",
    "plt.scatter(num_heads, val_acc)\n",
    "plt.title('Number of Heads vs. Validation Accuracy')\n",
    "plt.xlabel('Number of Heads')\n",
    "plt.ylabel('Validation Accuracy')\n",
    "plt.savefig('number_of_heads_vs_validation_accuracy.png')\n",
    "\n",
    "# Plot and save Number of Encoder Layers vs. Validation Accuracy\n",
    "plt.subplot(2, 2, 3)\n",
    "plt.scatter(num_layers_enc, val_acc)\n",
    "plt.title('Number of Encoder Layers vs. Validation Accuracy')\n",
    "plt.xlabel('Number of Encoder Layers')\n",
    "plt.ylabel('Validation Accuracy')\n",
    "plt.savefig('number_of_encoder_layers_vs_validation_accuracy.png')\n",
    "\n",
    "# Plot and save Number of Decoder Layers vs. Validation Accuracy\n",
    "plt.subplot(2, 2, 4)\n",
    "plt.scatter(num_layers_dec, val_acc)\n",
    "plt.title('Number of Decoder Layers vs. Validation Accuracy')\n",
    "plt.xlabel('Number of Decoder Layers')\n",
    "plt.ylabel('Validation Accuracy')\n",
    "plt.savefig('number_of_decoder_layers_vs_validation_accuracy.png')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "e5cc03fc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:02:01.462195Z",
     "iopub.status.busy": "2023-11-26T19:02:01.461821Z",
     "iopub.status.idle": "2023-11-26T19:02:02.162082Z",
     "shell.execute_reply": "2023-11-26T19:02:02.161117Z"
    },
    "papermill": {
     "duration": 2.330869,
     "end_time": "2023-11-26T19:02:02.164246",
     "exception": false,
     "start_time": "2023-11-26T19:01:59.833377",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Retrieve the best trials\n",
    "best_trials = tuner.oracle.get_best_trials(num_trials=5)\n",
    "\n",
    "# Extract relevant information\n",
    "val_acc = [trial.metrics.get_last_value('val_accuracy') for trial in best_trials]\n",
    "learning_rates = [trial.hyperparameters.get('learning_rate') for trial in best_trials]\n",
    "num_heads = [trial.hyperparameters.get('num_head') for trial in best_trials]\n",
    "num_layers_enc = [trial.hyperparameters.get('num_layers_enc') for trial in best_trials]\n",
    "num_layers_dec = [trial.hyperparameters.get('num_layers_dec') for trial in best_trials]\n",
    "\n",
    "# Find the index of the best trial\n",
    "best_trial_index = val_acc.index(max(val_acc))\n",
    "\n",
    "# Plot hyperparameters vs. validation accuracy in a single plot\n",
    "plt.figure(figsize=(15, 8))\n",
    "\n",
    "# Scatter plot for Learning Rate\n",
    "plt.scatter(learning_rates, val_acc, label='Learning Rate', alpha=0.7)\n",
    "# Highlight the best point\n",
    "plt.scatter(learning_rates[best_trial_index], val_acc[best_trial_index], color='red', marker='*', s=200, label='Best_parameters')\n",
    "\n",
    "# Scatter plot for Number of Heads\n",
    "plt.scatter(num_heads, val_acc, label='Number of Heads', alpha=0.7)\n",
    "# Highlight the best point\n",
    "plt.scatter(num_heads[best_trial_index], val_acc[best_trial_index], color='red', marker='*', s=200)\n",
    "\n",
    "# Scatter plot for Number of Encoder Layers\n",
    "plt.scatter(num_layers_enc, val_acc, label='Number of Encoder Layers', alpha=0.7)\n",
    "# Highlight the best point\n",
    "plt.scatter(num_layers_enc[best_trial_index], val_acc[best_trial_index], color='red', marker='*', s=200)\n",
    "\n",
    "# Scatter plot for Number of Decoder Layers\n",
    "plt.scatter(num_layers_dec, val_acc, label='Number of Decoder Layers', alpha=0.7)\n",
    "# Highlight the best point\n",
    "plt.scatter(num_layers_dec[best_trial_index], val_acc[best_trial_index], color='red', marker='*', s=200)\n",
    "\n",
    "# Add labels and title\n",
    "plt.title('Hyperparameters vs. Validation Accuracy')\n",
    "plt.xlabel('Hyperparameter Values')\n",
    "plt.ylabel('Validation Accuracy')\n",
    "plt.legend()\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig('hyperparameter_vs_validation_accuracy.png')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18e617c9",
   "metadata": {
    "papermill": {
     "duration": 1.611512,
     "end_time": "2023-11-26T19:02:05.561076",
     "exception": false,
     "start_time": "2023-11-26T19:02:03.949564",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "# Create TFLite model\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "ad4988ea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:02:08.914740Z",
     "iopub.status.busy": "2023-11-26T19:02:08.914335Z",
     "iopub.status.idle": "2023-11-26T19:02:34.662540Z",
     "shell.execute_reply": "2023-11-26T19:02:34.661670Z"
    },
    "papermill": {
     "duration": 27.390161,
     "end_time": "2023-11-26T19:02:34.665023",
     "exception": false,
     "start_time": "2023-11-26T19:02:07.274862",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "\n",
    "# Load the saved model\n",
    "final_model = tf.keras.models.load_model(\"final_model\")\n",
    "\n",
    "# Convert the model to TFLite format\n",
    "converter = tf.lite.TFLiteConverter.from_keras_model(final_model)\n",
    "tflite_model = converter.convert()\n",
    "\n",
    "# Save the TFLite model to a file\n",
    "with open(\"final_model.tflite\", \"wb\") as f:\n",
    "    f.write(tflite_model)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f6467340",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:02:38.008965Z",
     "iopub.status.busy": "2023-11-26T19:02:38.008581Z",
     "iopub.status.idle": "2023-11-26T19:02:38.348266Z",
     "shell.execute_reply": "2023-11-26T19:02:38.347196Z"
    },
    "papermill": {
     "duration": 1.94252,
     "end_time": "2023-11-26T19:02:38.350352",
     "exception": false,
     "start_time": "2023-11-26T19:02:36.407832",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot(history.history['accuracy'], label='Training Accuracy')\n",
    "plt.plot(history.history['val_accuracy'], label='Validation Accuracy')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.savefig('final_training_validation_accuracy_plot.png')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "6e0eb338",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-26T19:02:41.740622Z",
     "iopub.status.busy": "2023-11-26T19:02:41.740242Z",
     "iopub.status.idle": "2023-11-26T19:02:42.143933Z",
     "shell.execute_reply": "2023-11-26T19:02:42.143027Z"
    },
    "papermill": {
     "duration": 2.070958,
     "end_time": "2023-11-26T19:02:42.146173",
     "exception": false,
     "start_time": "2023-11-26T19:02:40.075215",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot training loss\n",
    "plt.plot(history.history['loss'], label='Training Loss')\n",
    "# Plot validation loss\n",
    "plt.plot(history.history['val_loss'], label='Validation Loss')\n",
    "\n",
    "# Customize the plot\n",
    "plt.title('final_Training and Validation Loss')\n",
    "plt.xlabel('Epoch')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.savefig('final_training_validation_loss_plot.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9cea6849",
   "metadata": {
    "papermill": {
     "duration": 1.613,
     "end_time": "2023-11-26T19:02:45.472613",
     "exception": false,
     "start_time": "2023-11-26T19:02:43.859613",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "databundleVersionId": 5973250,
     "sourceId": 52950,
     "sourceType": "competition"
    },
    {
     "datasetId": 4052048,
     "sourceId": 7042486,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30587,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 13859.43078,
   "end_time": "2023-11-26T19:02:52.332040",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-11-26T15:11:52.901260",
   "version": "2.4.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0ffb9e671c8c476390778887b19334df": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_75333bee930a425d8ec0f5c233dd4158",
        "IPY_MODEL_ec000c067f6240e8a41fdf0ca437488c",
        "IPY_MODEL_a4b9c0db7ed64338b5d8640949cbc76b"
       ],
       "layout": "IPY_MODEL_5ca57bfcb65449e4af0c44601f295ce9"
      }
     },
     "218d6195960e460492d68fd35b42f631": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "394888d105ea478eb041169ffea82f1d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "5ad4559faa32425bb01f85c5e4a15321": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5ca57bfcb65449e4af0c44601f295ce9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6b05a646898941c586d1ba5ef79184e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "75333bee930a425d8ec0f5c233dd4158": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_9aedd66b6f6948099ab2b29362a18835",
       "placeholder": "​",
       "style": "IPY_MODEL_394888d105ea478eb041169ffea82f1d",
       "value": "100%"
      }
     },
     "9aedd66b6f6948099ab2b29362a18835": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9d66db03857744c7af5fd8f0b21a5e65": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a4b9c0db7ed64338b5d8640949cbc76b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_9d66db03857744c7af5fd8f0b21a5e65",
       "placeholder": "​",
       "style": "IPY_MODEL_218d6195960e460492d68fd35b42f631",
       "value": " 68/68 [09:33&lt;00:00,  8.64s/it]"
      }
     },
     "ec000c067f6240e8a41fdf0ca437488c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_6b05a646898941c586d1ba5ef79184e6",
       "max": 68.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_5ad4559faa32425bb01f85c5e4a15321",
       "value": 68.0
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
